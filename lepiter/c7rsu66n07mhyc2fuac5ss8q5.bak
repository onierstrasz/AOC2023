{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:51.418093+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:51.418093+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2kdsinLIDQCxg+YADlZXzg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In [Puzzle 8](https://adventofcode.com/2023/day/8)  you have a Map, Nodes, and Steps. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:56.626603+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:56.626603+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "csC7inLIDQCxn1jGDlZXzg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "From the input you build a map, and also mark the Start and End nodes. Each node has a right and left successor. The instructions are a sequences of steps you have to cycle through until you reach the end."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:58.786493+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:58.786493+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hrXcinLIDQCxrApFDlZXzg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The output is just the number of steps to reach the end."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:03:01.542963+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:03:01.542963+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "AcUGi3LIDQCxuelYDlZXzg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "NB: you can stop any time you reach the end; you don;t have to complete a full cycle."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:03:03.848705+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:03:03.848705+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0fQpi3LIDQCxxsm9DlZXzg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Bonus: after each cycle you could log the current node, and check if you have reached it before after some cycles. If so, you are in a loop and should output -1."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:02:17.360068+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-09T11:03:03.849819+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3ZpkiHLIDQCxEAQzDlZXzg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We have two test cases.\nThe problem seems straightforward, but the loop detection would make it more interesting."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-12-09T11:02:17.331825+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-12-09T11:02:17.331825+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "* Puzzle 8"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "2d2b6488-72c8-0d00-b10f-806f0e5657ce"
	}
}